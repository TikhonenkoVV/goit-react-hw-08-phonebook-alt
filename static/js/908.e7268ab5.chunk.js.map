{"version":3,"file":"static/js/908.e7268ab5.chunk.js","mappings":"wPAGaA,EAAqBC,EAAAA,EAAAA,QAAH,gDAIlBC,EAAoBD,EAAAA,EAAAA,IAAH,gGAKjBE,EAAuBF,EAAAA,EAAAA,IAAH,qFAKpBG,EAAeH,EAAAA,EAAAA,EAAH,iDAIZI,EAAOJ,EAAAA,EAAAA,GAAH,yEAKJK,EAAOL,EAAAA,EAAAA,GAAH,4MAUJM,EAAiBN,EAAAA,EAAAA,IAAH,2MAOV,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAITC,EAAcX,EAAAA,EAAAA,IAAH,mNAYXY,EAASZ,EAAAA,EAAAA,OAAH,4RAQK,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,GAAvB,IAGZ,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAITI,GAAUd,EAAAA,EAAAA,GAAOe,EAAAA,GAAPf,CAAH,4RAQI,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,GAAvB,IAGZ,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAITM,EAAchB,EAAAA,EAAAA,OAAH,4RAQA,SAAAO,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,GAAvB,IAGZ,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,I,mGCzETO,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,KAEzBC,EAAAA,EAAAA,YAAU,WACNL,GAASM,EAAAA,EAAAA,MACZ,GAAE,CAACN,IAEJ,IAEMO,GAAWC,EAAAA,EAAAA,MACjB,OACI,SAAC3B,EAAD,WACI,UAAC,KAAD,YACI,SAACE,EAAD,WACI,UAACC,EAAD,YACI,SAACC,EAAD,UAAc,UACd,uBAAG,kBACH,uBAAG,iBAGX,SAACC,EAAD,UACKgB,EAAKO,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAClC,OACI,UAAC3B,EAAD,YACI,UAACC,EAAD,YACI,UAACK,EAAD,YACI,gBACIsB,IAAa,KAARD,EAAaE,EAASF,EAC3BG,IAAI,SACJC,MAAO,GACPC,OAAQ,MAEZ,uBAAIR,QAER,uBAAIC,KACJ,uBAAIC,QAER,SAACjB,EAAD,CACIwB,GAAE,kBAAaV,GACfW,MAAO,CAAEC,KAAMf,GAFnB,UAII,SAAC,IAAD,CACIgB,EAAG,GACHC,EAAG,GACHC,IAAG,UAAKC,EAAAA,EAAL,qBAGX,SAAChC,EAAD,CACIiC,KAAK,SACLC,QAAS,kBA1CtBC,EA0CuCnB,EA1CjCV,GAAS8B,EAAAA,EAAAA,IAAoBD,IAAnC,IAAAA,CA0CsB,EAFb,UAII,SAAC,IAAD,CACIN,EAAG,GACHC,EAAG,GACHC,IAAG,UAAKC,EAAAA,EAAL,0BAGX,SAAC5B,EAAD,CAAa6B,KAAK,SAASC,QAAS,WAAQ,EAA5C,UACI,SAAC,IAAD,CACIL,EAAG,GACHC,EAAG,GACHC,IAAG,UAAKC,EAAAA,EAAL,wBAtCJhB,EA2ClB,UAKpB,EC7FD,EAJa,WACT,OAAO,SAACX,EAAD,GACV,C","sources":["components/Contact-list/ContactList.styled.jsx","components/Contact-list/ContactList.jsx","Pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContactListSection = styled.section`\n    padding-top: 80px;\n`;\n\nexport const ContactListHeader = styled.div`\n    padding: 15px 130px 15px 10px;\n    border-bottom: 1px solid grey;\n`;\n\nexport const ContactListHeaderBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport const FirstElement = styled.p`\n    padding-left: 40px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n    &:nth-of-type(2n) {\n        background-image: linear-gradient(#00000022, #00000022);\n    }\n`;\n\nexport const ContactWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    width: calc(100% - 30px);\n    transition: color 250ms;\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n\nexport const NameWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    & img {\n        width: 30px;\n        aspect-ratio: 1;\n        object-fit: cover;\n        border-radius: 50%;\n    }\n`;\n\nexport const BtnDel = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background-color: ${props => props.theme.colors.btn};\n    transition: color 250ms;\n    &:hover {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n\nexport const BtnEdit = styled(Link)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background-color: ${props => props.theme.colors.btn};\n    transition: color 250ms;\n    &:hover {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n\nexport const BtnFavorite = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background-color: ${props => props.theme.colors.btn};\n    transition: color 250ms;\n    &:hover {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n","import PropTypes from 'prop-types';\nimport {\n    BtnDel,\n    BtnEdit,\n    BtnFavorite,\n    ContactListHeader,\n    ContactListHeaderBox,\n    ContactListSection,\n    ContactWrapper,\n    FirstElement,\n    Item,\n    List,\n    NameWrapper,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'store/selector';\nimport { Container } from 'components/App.styled';\nimport { useLocation } from 'react-router-dom';\nimport sprite from '../../img/icons.svg';\nimport { Svg } from 'components/icon/Icon';\nimport { useEffect } from 'react';\nimport {\n    hendleDeleteContact,\n    hendleFetchContact,\n} from 'store/contacts/contactsOperations';\nimport avatar from '../../img/avatar-default.png';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const list = useSelector(selectFilteredContacts);\n\n    useEffect(() => {\n        dispatch(hendleFetchContact());\n    }, [dispatch]);\n\n    const delContact = id => dispatch(hendleDeleteContact(id));\n\n    const location = useLocation();\n    return (\n        <ContactListSection>\n            <Container>\n                <ContactListHeader>\n                    <ContactListHeaderBox>\n                        <FirstElement>Name</FirstElement>\n                        <p>Phone mumber</p>\n                        <p>E-mail</p>\n                    </ContactListHeaderBox>\n                </ContactListHeader>\n                <List>\n                    {list.map(({ _id, name, phone, email, img }) => {\n                        return (\n                            <Item key={_id}>\n                                <ContactWrapper>\n                                    <NameWrapper>\n                                        <img\n                                            src={img === '' ? avatar : img}\n                                            alt=\"avatar\"\n                                            width={30}\n                                            height={30}\n                                        />\n                                        <p>{name}</p>\n                                    </NameWrapper>\n                                    <p>{phone}</p>\n                                    <p>{email}</p>\n                                </ContactWrapper>\n                                <BtnEdit\n                                    to={`contact/${_id}`}\n                                    state={{ from: location }}\n                                >\n                                    <Svg\n                                        w={20}\n                                        h={20}\n                                        use={`${sprite}#icon-pencil`}\n                                    />\n                                </BtnEdit>\n                                <BtnDel\n                                    type=\"button\"\n                                    onClick={() => delContact(_id)}\n                                >\n                                    <Svg\n                                        w={20}\n                                        h={20}\n                                        use={`${sprite}#icon-del-contact`}\n                                    />\n                                </BtnDel>\n                                <BtnFavorite type=\"button\" onClick={() => {}}>\n                                    <Svg\n                                        w={20}\n                                        h={20}\n                                        use={`${sprite}#icon-favorite`}\n                                    />\n                                </BtnFavorite>\n                            </Item>\n                        );\n                    })}\n                </List>\n            </Container>\n        </ContactListSection>\n    );\n};\n\nContactList.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            phone: PropTypes.string.isRequired,\n            email: PropTypes.string.isRequired,\n            img: PropTypes.string.isRequired,\n        })\n    ),\n};\n","import { ContactList } from 'components/Contact-list/ContactList';\n\nconst Home = () => {\n    return <ContactList />;\n};\n\nexport default Home;\n"],"names":["ContactListSection","styled","ContactListHeader","ContactListHeaderBox","FirstElement","List","Item","ContactWrapper","props","theme","colors","hover","NameWrapper","BtnDel","btn","BtnEdit","Link","BtnFavorite","ContactList","dispatch","useDispatch","list","useSelector","selectFilteredContacts","useEffect","hendleFetchContact","location","useLocation","map","_id","name","phone","email","img","src","avatar","alt","width","height","to","state","from","w","h","use","sprite","type","onClick","id","hendleDeleteContact"],"sourceRoot":""}