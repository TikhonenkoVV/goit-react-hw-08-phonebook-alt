{"version":3,"file":"static/js/908.54ac24fb.chunk.js","mappings":"oPAGaA,EAAqBC,EAAAA,EAAAA,QAAH,gDAIlBC,EAAoBD,EAAAA,EAAAA,IAAH,+FAKjBE,EAAuBF,EAAAA,EAAAA,IAAH,qFAKpBG,EAAeH,EAAAA,EAAAA,EAAH,iDAIZI,EAAOJ,EAAAA,EAAAA,GAAH,yEAKJK,EAAOL,EAAAA,EAAAA,GAAH,4MAUJM,GAAcN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,2MAOP,SAAAQ,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAITC,EAAcZ,EAAAA,EAAAA,IAAH,mNAYXa,EAASb,EAAAA,EAAAA,OAAH,0SAQK,SAAAQ,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,GAAvB,IAIZ,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,I,mGC9CTI,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,KAEzBC,EAAAA,EAAAA,YAAU,WACNL,GAASM,EAAAA,EAAAA,MACZ,GAAE,CAACN,IAEJ,IAEMO,GAAWC,EAAAA,EAAAA,MACjB,OACI,+BACI,SAACzB,EAAD,WACI,UAAC,KAAD,YACI,SAACE,EAAD,WACI,UAACC,EAAD,YACI,SAACC,EAAD,UAAc,UACd,uBAAG,kBACH,uBAAG,iBAGX,SAACC,EAAD,UACKc,EAAKO,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACnB,OACI,UAACvB,EAAD,YACI,UAACC,EAAD,CACIuB,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMR,GAFnB,WAII,UAACX,EAAD,YACI,gBACIoB,IAAKC,EACLC,IAAI,SACJC,MAAO,GACPC,OAAQ,MAEZ,uBAAIT,QAER,uBAAIC,KACJ,qBAEJ,SAACf,EAAD,CACIwB,KAAK,SACLC,QAAS,kBApC1B,SAAAZ,GAAE,OAAIV,GAASuB,EAAAA,EAAAA,IAAoBb,GAAjC,CAoC8Bc,CAAWd,EAAjB,EAFb,UAII,SAAC,IAAD,CACIe,EAAG,GACHC,EAAG,GACHC,IAAG,UAAKC,EAAAA,EAAL,2BAxBJlB,EA6BlB,YAMxB,EC/ED,EAJa,WACT,OAAO,SAACX,EAAD,GACV,C","sources":["components/Contact-list/ContactList.styled.jsx","components/Contact-list/ContactList.jsx","Pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ContactListSection = styled.section`\n    padding-top: 80px;\n`;\n\nexport const ContactListHeader = styled.div`\n    padding: 15px 50px 15px 10px;\n    border-bottom: 1px solid grey;\n`;\n\nexport const ContactListHeaderBox = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n`;\n\nexport const FirstElement = styled.p`\n    padding-left: 40px;\n`;\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Item = styled.li`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    padding: 10px;\n    &:nth-of-type(2n) {\n        background-image: linear-gradient(#00000022, #00000022);\n    }\n`;\n\nexport const ContactLink = styled(Link)`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    width: calc(100% - 30px);\n    transition: color 250ms;\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n\nexport const NameWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    & img {\n        width: 30px;\n        aspect-ratio: 1;\n        object-fit: cover;\n        border-radius: 50%;\n    }\n`;\n\nexport const BtnDel = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30px;\n    height: 30px;\n    flex-shrink: 0;\n    border-radius: 4px;\n    background-color: ${props => props.theme.colors.btn};\n    transition: color 250ms;\n    &:hover,\n    &:focus {\n        color: ${props => props.theme.colors.hover};\n    }\n`;\n","import PropTypes from 'prop-types';\nimport {\n    BtnDel,\n    ContactLink,\n    ContactListHeader,\n    ContactListHeaderBox,\n    ContactListSection,\n    FirstElement,\n    Item,\n    List,\n    NameWrapper,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'store/selector';\nimport { Container } from 'components/App.styled';\nimport avatar from '../../img/avatar-default.png';\nimport { useLocation } from 'react-router-dom';\nimport sprite from '../../img/icons.svg';\nimport { Svg } from 'components/icon/Icon';\nimport { useEffect } from 'react';\nimport {\n    hendleDeleteContact,\n    hendleFetchContact,\n} from 'store/contacts/contactsOperations';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const list = useSelector(selectFilteredContacts);\n\n    useEffect(() => {\n        dispatch(hendleFetchContact());\n    }, [dispatch]);\n\n    const delContact = id => dispatch(hendleDeleteContact(id));\n\n    const location = useLocation();\n    return (\n        <>\n            <ContactListSection>\n                <Container>\n                    <ContactListHeader>\n                        <ContactListHeaderBox>\n                            <FirstElement>Name</FirstElement>\n                            <p>Phone mumber</p>\n                            <p>E-mail</p>\n                        </ContactListHeaderBox>\n                    </ContactListHeader>\n                    <List>\n                        {list.map(({ id, name, number }) => {\n                            return (\n                                <Item key={id}>\n                                    <ContactLink\n                                        to={`contact/${id}`}\n                                        state={{ from: location }}\n                                    >\n                                        <NameWrapper>\n                                            <img\n                                                src={avatar}\n                                                alt=\"avatar\"\n                                                width={30}\n                                                height={30}\n                                            />\n                                            <p>{name}</p>\n                                        </NameWrapper>\n                                        <p>{number}</p>\n                                        <p></p>\n                                    </ContactLink>\n                                    <BtnDel\n                                        type=\"button\"\n                                        onClick={() => delContact(id)}\n                                    >\n                                        <Svg\n                                            w={20}\n                                            h={20}\n                                            use={`${sprite}#icon-del-contact`}\n                                        />\n                                    </BtnDel>\n                                </Item>\n                            );\n                        })}\n                    </List>\n                </Container>\n            </ContactListSection>\n        </>\n    );\n};\n\nContactList.propTypes = {\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        })\n    ),\n};\n","import { ContactList } from 'components/Contact-list/ContactList';\n\nconst Home = () => {\n    return <ContactList />;\n};\n\nexport default Home;\n"],"names":["ContactListSection","styled","ContactListHeader","ContactListHeaderBox","FirstElement","List","Item","ContactLink","Link","props","theme","colors","hover","NameWrapper","BtnDel","btn","ContactList","dispatch","useDispatch","list","useSelector","selectFilteredContacts","useEffect","hendleFetchContact","location","useLocation","map","id","name","number","to","state","from","src","avatar","alt","width","height","type","onClick","hendleDeleteContact","delContact","w","h","use","sprite"],"sourceRoot":""}